@inject IViewLocalizer Localizer
@model ResetPasswordModel

@{
    ViewData["Title"] = Localizer["PageTitle"];
}

<div class="container justify-content-center fullHeight">
    <div class="row heightInherit">
        <div class="col-md-6 col-xs-12 d-flex align-items-center">
            @(await Component.InvokeAsync<ImageViewComponent>(
                new { path = "/img/resetPassword.png", alt = "Reset password" }))
        </div>
        <div class="col-md-6 col-xs-12 d-flex align-items-center justify-content-center">
            <div>
                <h1 class="display-4 fontBold text-center paddingDelimiter15">
                    @Localizer["PageTitle"]
                </h1>
                @(await Component.InvokeAsync<TempDataMessageViewComponent>(
                    new {
                        statusColor = "text-success",
                        message = TempData[TempDataMessages.ResetPasswordConfirmation] as string }))
                @using (Html.BeginForm())
                {
                    <div class="form-group">
                        @Html.LabelFor(
                            model => model.NewPassword,
                            Localizer["NewPassword"].Value,
                            new { @class = "fontLarger fontLight" })
                        @Html.TextBoxFor(
                            model => model.NewPassword,
                            null,
                            new { @class = "form-control form-control-lg fontLight", type = "password" })
                        <div>
                            @Html.ValidationMessageFor(model => model.NewPassword, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(
                            model => model.ConfirmPassword,
                            Localizer["ConfirmPassword"].Value,
                            new { @class = "fontLarger fontLight" })
                        @Html.TextBoxFor(
                            model => model.ConfirmPassword,
                            null,
                            new { @class = "form-control form-control-lg fontLight", type = "password" })
                        <div>
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <input type="hidden" asp-for="Email" class="form-control" />
                    <input type="hidden" asp-for="Token" class="form-control" />
                    <span class="text-danger">
                        @Html.ValidationSummary(true)
                    </span>
                    <div class="text-center paddingDelimiter15">
                        <button type="submit"
                                class="btn btn-lg bgRoyalOrange">
                            @Localizer["SetNewPassword"]
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>