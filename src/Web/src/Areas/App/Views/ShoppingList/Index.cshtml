@inject IViewLocalizer Localizer
@model PlanIntervalModel

<div class="container fullHeight">
    <div class="row rowReverse heightInherit">
        <div class="col-md-6 col-xs-12 d-flex align-items-center justify-content-center paddingDelimiter30">
            <form id="shoppingListForm"
                  method="post"
                  role="form"
                  novalidate>
                <div class="form-row">
                    <div class="form-group col-xs-12 col-lg-6">
                        @Html.LabelFor(
                            m => m.StartingDate,
                            Localizer["StartingDate"].Value,
                            new { @class = "fontLarger fontLight" })
                        @Html.TextBoxFor(
                            m => m.StartingDate,
                            null,
                            new { @class = "form-control form-control-lg fontLight", type = "date" })
                        <div>
                            @Html.ValidationMessageFor(m => m.StartingDate, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-lg-6">
                        @Html.LabelFor(
                            m => m.StartingMeal,
                            Localizer["StartingMeal"].Value,
                            new { @class = "fontLarger fontLight" })
                        @Html.DropDownListFor(
                            m => m.StartingMeal,
                            (IEnumerable<SelectListItem>)ViewBag.TranslatedMealNames,
                            new { @class = "form-control form-control-lg fontLight" })
                        <div>
                            @Html.ValidationMessageFor(m => m.StartingMeal, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-xs-12 col-lg-6">
                        @Html.LabelFor(
                            m => m.EndingDate,
                            Localizer["EndingDate"].Value,
                            new { @class = "fontLarger fontLight" })
                        @Html.TextBoxFor(
                            m => m.EndingDate,
                            null,
                            new { @class = "form-control form-control-lg fontLight", type = "date" })
                        <div>
                            @Html.ValidationMessageFor(m => m.EndingDate, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-lg-6">
                        @Html.LabelFor(
                            m => m.EndingMeal,
                            Localizer["EndingMeal"].Value,
                            new { @class = "fontLarger fontLight" })
                        @Html.DropDownListFor(
                            m => m.EndingMeal,
                            (IEnumerable<SelectListItem>)ViewBag.TranslatedMealNames,
                            new { @class = "form-control form-control-lg fontLight" })
                        <div>
                            @Html.ValidationMessageFor(m => m.EndingMeal, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="text-center paddingDelimiter15">
                    <div id="result" class="text-danger">
                    </div>
                    @Html.ValidationSummary(true)
                </div>
                <div class="form-row justify-content-center paddingDelimiter15">
                    <button type="submit"
                            class="btn btn-lg bgRoyalOrange">
                        @Localizer["Select"]
                    </button>
                </div>
            </form>
        </div>
        <div class="col-md-6 col-xs-12 d-flex align-items-center justify-content-center paddingDelimiter30">
            <div id="list">
                @(await Component.InvokeAsync<ImageViewComponent>(
                    new { path = "/img/shoppingList.png", alt = "Shopping list" }))
            </div>
        </div>
    </div>
</div>